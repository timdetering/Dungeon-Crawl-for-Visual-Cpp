// This file has been automatically generated.

#include "tiledef-floor.h"

#include <string>
#include <cstring>
#include <cassert>
using namespace std;

static unsigned int _tile_floor_count[TILE_FLOOR_MAX - 0] =
{
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    15,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
};

unsigned int tile_floor_count(tileidx_t idx)
{
    assert(idx >= 0 && idx < TILE_FLOOR_MAX);
    return _tile_floor_count[idx - 0];
}

static tileidx_t _tile_floor_basetiles[TILE_FLOOR_MAX - 0] =
{
    0,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    19,
    19,
    19,
    19,
    19,
    19,
    19,
    19,
    19,
    28,
    28,
    28,
    28,
    28,
    28,
    28,
    28,
    28,
    37,
    37,
    37,
    37,
    37,
    37,
    37,
    37,
    37,
    46,
    46,
    46,
    46,
    46,
    46,
    46,
    46,
    46,
    55,
    55,
    55,
    55,
    55,
    55,
    55,
    55,
    55,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    73,
    73,
    73,
    73,
    73,
    73,
    73,
    73,
    73,
    82,
    82,
    82,
    82,
    82,
    82,
    82,
    82,
    82,
    91,
    91,
    91,
    91,
    91,
    91,
    91,
    91,
    91,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    100,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    118,
    118,
    118,
    118,
    118,
    118,
    118,
    118,
    118,
    127,
    127,
    127,
    127,
    127,
    127,
    127,
    127,
    127,
    136,
    136,
    136,
    136,
    136,
    136,
    136,
    136,
    136,
    145,
    145,
    145,
    145,
    149,
    149,
    149,
    149,
    153,
    153,
    153,
    153,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    157,
    173,
    173,
    173,
    173,
    177,
    177,
    177,
    177,
    181,
    181,
    181,
    181,
    185,
    185,
    185,
    185,
    185,
    185,
    185,
    185,
    193,
    193,
    193,
    193,
    197,
    197,
    197,
    197,
    201,
    201,
    201,
    201,
    205,
    205,
    205,
    205,
    209,
    209,
    209,
    209,
    209,
    209,
    209,
    209,
    209,
    209,
    209,
    209,
    221,
    221,
    221,
    221,
    225,
    225,
    225,
    225,
    229,
    229,
    229,
    229,
    229,
    229,
    229,
    236,
    236,
    236,
    236,
    240,
    240,
    240,
    240,
    244,
    244,
    244,
    244,
    248,
    248,
    248,
    248,
    252,
    252,
    252,
    252,
    256,
    256,
    256,
    256,
    260,
    260,
    260,
    260,
    264,
    264,
    264,
    264,
    268,
    268,
    268,
    268,
    272,
    272,
    272,
    272,
    276,
    276,
    276,
    276,
    280,
    280,
    280,
    280,
    284,
    284,
    284,
    284,
    288,
    288,
    288,
    288,
    292,
    292,
    292,
    292,
    296,
    296,
    296,
    296,
    296,
    296,
    296,
    296,
    304,
    304,
    304,
    304,
    304,
    304,
    304,
    304,
    304,
    304,
    304,
    304,
    316,
    316,
    316,
    316,
    316,
    316,
    322,
    322,
    322,
    322,
    322,
    322,
    322,
    322,
    322,
    322,
    332,
    332,
    332,
    332,
    332,
    332,
    332,
    339,
    339,
    339,
    339,
    339,
    339,
    345,
    345,
    345,
    345,
    345,
    345,
    345,
    345,
    345,
    345,
    345,
    345,
    357,
    357,
    357,
    357,
    357,
    357,
    357,
    357,
    357,
    366,
    366,
    366,
    369,
    369,
    369,
    369,
    369,
    369,
    369,
    376,
    376,
    376,
    376,
    376,
    376,
    376,
    376,
    376,
    385,
    385,
    385,
    385,
    385,
    385,
    385,
    385,
    385,
    394,
    394,
    394,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    406,
    407,
    407,
    407,
    407,
    407,
    407,
    407,
    407,
    407,
    407,
    417,
    418,
    419,
    420,
    421,
    422,
    423,
    424,
    425,
    426,
    427,
    428,
    429,
    430,
    431,
    432,
    433,
    434,
    435,
    436,
    437,
    438,
    439,
    440,
    441,
    442,
    443,
    444,
    445,
    446,
    447,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    448,
    463,
    464,
    464,
    464,
    464,
    468,
    468,
    468,
    468,
    468,
    468,
    468,
    468,
    476,
    476,
    476,
    476,
    476,
    476,
    482,
    482,
    482,
    482,
    482,
    482,
    482,
    482,
    482,
    482,
    482,
    482,
    494,
    494,
    494,
    494,
    494,
    494,
    494,
    494,
    502,
    502,
    502,
    502,
    502,
    502,
    502,
    502,
    502,
    511,
    511,
    511,
    511,
    511,
    511,
    511,
    511,
    511,
    520,
    520,
    520,
    520,
    520,
    520,
    520,
    520,
    520,
    529,
    529,
    529,
    529,
    529,
    529,
    529,
    529,
    529,
    538,
    538,
    538,
    538,
    538,
    538,
    538,
    538,
    538,
    547,
    547,
    547,
    547,
    547,
    547,
    547,
    547,
    547,
    556,
    556,
    556,
    556,
    556,
    556,
    556,
    556,
    556,
    565,
    565,
    565,
    565,
    565,
    565,
    565,
    565,
    565,
    574,
    574,
    574,
    574,
    574,
    574,
    574,
    574,
    574,
    574,
    574,
    574,
    586,
    586,
    586,
    586,
    586,
    586,
    586,
    586,
    586,
    595,
    595,
    595,
    595,
    595,
    595,
};

tileidx_t tile_floor_basetile(tileidx_t idx)
{
    assert(idx >= 0 && idx < TILE_FLOOR_MAX);
    return _tile_floor_basetiles[idx - 0] + 0;
}

static int _tile_floor_probs[TILE_FLOOR_MAX - 0] =
{
    1,
    1,
    6,
    12,
    18,
    24,
    30,
    36,
    39,
    40,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    16,
    32,
    48,
    64,
    80,
    88,
    96,
    104,
    112,
    120,
    126,
    132,
    135,
    138,
    140,
    141,
    1,
    2,
    3,
    4,
    10,
    11,
    12,
    13,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    10,
    13,
    16,
    19,
    10,
    13,
    16,
    19,
    10,
    13,
    16,
    19,
    3,
    6,
    9,
    12,
    20,
    40,
    60,
    80,
    90,
    91,
    92,
    97,
    102,
    107,
    108,
    109,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    15,
    18,
    21,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    5,
    10,
    15,
    20,
    22,
    24,
    26,
    28,
    5,
    10,
    15,
    20,
    25,
    28,
    31,
    33,
    35,
    37,
    39,
    40,
    1,
    2,
    3,
    4,
    5,
    6,
    5,
    10,
    15,
    20,
    25,
    27,
    28,
    29,
    30,
    31,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    12,
    16,
    18,
    20,
    21,
    15,
    30,
    45,
    46,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    90,
    100,
    110,
    120,
    122,
    124,
    126,
    2,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    10,
    11,
    12,
    13,
    14,
    15,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    90,
    100,
    110,
    120,
    10,
    20,
    30,
    40,
    42,
    44,
    46,
    48,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    83,
    86,
    89,
    92,
    3,
    6,
    9,
    12,
    15,
    18,
    21,
    24,
    27,
    3,
    6,
    9,
    12,
    17,
    22,
};

int tile_floor_probs(tileidx_t idx)
{
    assert(idx >= 0 && idx < TILE_FLOOR_MAX);
    return _tile_floor_probs[idx - 0];
}

static const char *_tile_floor_name[TILE_FLOOR_MAX - 0] =
{
    "DNGN_UNSEEN",
    "DNGN_ERROR",
    "FLOOR_GREY_DIRT",
    "FLOOR_GREY_DIRT_1",
    "FLOOR_GREY_DIRT_2",
    "FLOOR_GREY_DIRT_3",
    "FLOOR_GREY_DIRT_4",
    "FLOOR_GREY_DIRT_5",
    "FLOOR_GREY_DIRT_6",
    "FLOOR_GREY_DIRT_7",
    "FLOOR_PEBBLE",
    "FLOOR_PEBBLE_1",
    "FLOOR_PEBBLE_2",
    "FLOOR_PEBBLE_3",
    "FLOOR_PEBBLE_4",
    "FLOOR_PEBBLE_5",
    "FLOOR_PEBBLE_6",
    "FLOOR_PEBBLE_7",
    "FLOOR_PEBBLE_8",
    "FLOOR_PEBBLE_BROWN",
    "FLOOR_PEBBLE_BROWN_1",
    "FLOOR_PEBBLE_BROWN_2",
    "FLOOR_PEBBLE_BROWN_3",
    "FLOOR_PEBBLE_BROWN_4",
    "FLOOR_PEBBLE_BROWN_5",
    "FLOOR_PEBBLE_BROWN_6",
    "FLOOR_PEBBLE_BROWN_7",
    "FLOOR_PEBBLE_BROWN_8",
    "FLOOR_PEBBLE_BLUE",
    "FLOOR_PEBBLE_BLUE_1",
    "FLOOR_PEBBLE_BLUE_2",
    "FLOOR_PEBBLE_BLUE_3",
    "FLOOR_PEBBLE_BLUE_4",
    "FLOOR_PEBBLE_BLUE_5",
    "FLOOR_PEBBLE_BLUE_6",
    "FLOOR_PEBBLE_BLUE_7",
    "FLOOR_PEBBLE_BLUE_8",
    "FLOOR_PEBBLE_GREEN",
    "FLOOR_PEBBLE_GREEN_1",
    "FLOOR_PEBBLE_GREEN_2",
    "FLOOR_PEBBLE_GREEN_3",
    "FLOOR_PEBBLE_GREEN_4",
    "FLOOR_PEBBLE_GREEN_5",
    "FLOOR_PEBBLE_GREEN_6",
    "FLOOR_PEBBLE_GREEN_7",
    "FLOOR_PEBBLE_GREEN_8",
    "FLOOR_PEBBLE_CYAN",
    "FLOOR_PEBBLE_CYAN_1",
    "FLOOR_PEBBLE_CYAN_2",
    "FLOOR_PEBBLE_CYAN_3",
    "FLOOR_PEBBLE_CYAN_4",
    "FLOOR_PEBBLE_CYAN_5",
    "FLOOR_PEBBLE_CYAN_6",
    "FLOOR_PEBBLE_CYAN_7",
    "FLOOR_PEBBLE_CYAN_8",
    "FLOOR_PEBBLE_RED",
    "FLOOR_PEBBLE_RED_1",
    "FLOOR_PEBBLE_RED_2",
    "FLOOR_PEBBLE_RED_3",
    "FLOOR_PEBBLE_RED_4",
    "FLOOR_PEBBLE_RED_5",
    "FLOOR_PEBBLE_RED_6",
    "FLOOR_PEBBLE_RED_7",
    "FLOOR_PEBBLE_RED_8",
    "FLOOR_PEBBLE_MAGENTA",
    "FLOOR_PEBBLE_MAGENTA_1",
    "FLOOR_PEBBLE_MAGENTA_2",
    "FLOOR_PEBBLE_MAGENTA_3",
    "FLOOR_PEBBLE_MAGENTA_4",
    "FLOOR_PEBBLE_MAGENTA_5",
    "FLOOR_PEBBLE_MAGENTA_6",
    "FLOOR_PEBBLE_MAGENTA_7",
    "FLOOR_PEBBLE_MAGENTA_8",
    "FLOOR_PEBBLE_DARKGRAY",
    "FLOOR_PEBBLE_DARKGRAY_1",
    "FLOOR_PEBBLE_DARKGRAY_2",
    "FLOOR_PEBBLE_DARKGRAY_3",
    "FLOOR_PEBBLE_DARKGRAY_4",
    "FLOOR_PEBBLE_DARKGRAY_5",
    "FLOOR_PEBBLE_DARKGRAY_6",
    "FLOOR_PEBBLE_DARKGRAY_7",
    "FLOOR_PEBBLE_DARKGRAY_8",
    "FLOOR_PEBBLE_LIGHTBLUE",
    "FLOOR_PEBBLE_LIGHTBLUE_1",
    "FLOOR_PEBBLE_LIGHTBLUE_2",
    "FLOOR_PEBBLE_LIGHTBLUE_3",
    "FLOOR_PEBBLE_LIGHTBLUE_4",
    "FLOOR_PEBBLE_LIGHTBLUE_5",
    "FLOOR_PEBBLE_LIGHTBLUE_6",
    "FLOOR_PEBBLE_LIGHTBLUE_7",
    "FLOOR_PEBBLE_LIGHTBLUE_8",
    "FLOOR_PEBBLE_LIGHTGREEN",
    "FLOOR_PEBBLE_LIGHTGREEN_1",
    "FLOOR_PEBBLE_LIGHTGREEN_2",
    "FLOOR_PEBBLE_LIGHTGREEN_3",
    "FLOOR_PEBBLE_LIGHTGREEN_4",
    "FLOOR_PEBBLE_LIGHTGREEN_5",
    "FLOOR_PEBBLE_LIGHTGREEN_6",
    "FLOOR_PEBBLE_LIGHTGREEN_7",
    "FLOOR_PEBBLE_LIGHTGREEN_8",
    "FLOOR_PEBBLE_LIGHTCYAN",
    "FLOOR_PEBBLE_LIGHTCYAN_1",
    "FLOOR_PEBBLE_LIGHTCYAN_2",
    "FLOOR_PEBBLE_LIGHTCYAN_3",
    "FLOOR_PEBBLE_LIGHTCYAN_4",
    "FLOOR_PEBBLE_LIGHTCYAN_5",
    "FLOOR_PEBBLE_LIGHTCYAN_6",
    "FLOOR_PEBBLE_LIGHTCYAN_7",
    "FLOOR_PEBBLE_LIGHTCYAN_8",
    "FLOOR_PEBBLE_LIGHTRED",
    "FLOOR_PEBBLE_LIGHTRED_1",
    "FLOOR_PEBBLE_LIGHTRED_2",
    "FLOOR_PEBBLE_LIGHTRED_3",
    "FLOOR_PEBBLE_LIGHTRED_4",
    "FLOOR_PEBBLE_LIGHTRED_5",
    "FLOOR_PEBBLE_LIGHTRED_6",
    "FLOOR_PEBBLE_LIGHTRED_7",
    "FLOOR_PEBBLE_LIGHTRED_8",
    "FLOOR_PEBBLE_LIGHTMAGENTA",
    "FLOOR_PEBBLE_LIGHTMAGENTA_1",
    "FLOOR_PEBBLE_LIGHTMAGENTA_2",
    "FLOOR_PEBBLE_LIGHTMAGENTA_3",
    "FLOOR_PEBBLE_LIGHTMAGENTA_4",
    "FLOOR_PEBBLE_LIGHTMAGENTA_5",
    "FLOOR_PEBBLE_LIGHTMAGENTA_6",
    "FLOOR_PEBBLE_LIGHTMAGENTA_7",
    "FLOOR_PEBBLE_LIGHTMAGENTA_8",
    "FLOOR_PEBBLE_YELLOW",
    "FLOOR_PEBBLE_YELLOW_1",
    "FLOOR_PEBBLE_YELLOW_2",
    "FLOOR_PEBBLE_YELLOW_3",
    "FLOOR_PEBBLE_YELLOW_4",
    "FLOOR_PEBBLE_YELLOW_5",
    "FLOOR_PEBBLE_YELLOW_6",
    "FLOOR_PEBBLE_YELLOW_7",
    "FLOOR_PEBBLE_YELLOW_8",
    "FLOOR_PEBBLE_WHITE",
    "FLOOR_PEBBLE_WHITE_1",
    "FLOOR_PEBBLE_WHITE_2",
    "FLOOR_PEBBLE_WHITE_3",
    "FLOOR_PEBBLE_WHITE_4",
    "FLOOR_PEBBLE_WHITE_5",
    "FLOOR_PEBBLE_WHITE_6",
    "FLOOR_PEBBLE_WHITE_7",
    "FLOOR_PEBBLE_WHITE_8",
    "FLOOR_HALL",
    "FLOOR_HALL_1",
    "FLOOR_HALL_2",
    "FLOOR_HALL_3",
    "FLOOR_ORC",
    "FLOOR_ORC_1",
    "FLOOR_ORC_2",
    "FLOOR_ORC_3",
    "FLOOR_ICE",
    "FLOOR_ICE_1",
    "FLOOR_ICE_2",
    "FLOOR_ICE_3",
    "FLOOR_LAIR",
    "FLOOR_LAIR_1",
    "FLOOR_LAIR_2",
    "FLOOR_LAIR_3",
    "FLOOR_LAIR_4",
    "FLOOR_LAIR_5",
    "FLOOR_LAIR_6",
    "FLOOR_LAIR_7",
    "FLOOR_LAIR_8",
    "FLOOR_LAIR_9",
    "FLOOR_LAIR_10",
    "FLOOR_LAIR_11",
    "FLOOR_LAIR_12",
    "FLOOR_LAIR_13",
    "FLOOR_LAIR_14",
    "FLOOR_LAIR_15",
    "FLOOR_MOSS",
    "FLOOR_MOSS_1",
    "FLOOR_MOSS_2",
    "FLOOR_MOSS_3",
    "FLOOR_SLIME",
    "FLOOR_SLIME_1",
    "FLOOR_SLIME_2",
    "FLOOR_SLIME_3",
    "FLOOR_SLIME_ACIDIC",
    "FLOOR_SLIME_ACIDIC_1",
    "FLOOR_SLIME_ACIDIC_2",
    "FLOOR_SLIME_ACIDIC_3",
    "SLIME_OVERLAY",
    "SLIME_OVERLAY_1",
    "SLIME_OVERLAY_2",
    "SLIME_OVERLAY_3",
    "SLIME_OVERLAY_4",
    "SLIME_OVERLAY_5",
    "SLIME_OVERLAY_6",
    "SLIME_OVERLAY_7",
    "FLOOR_SNAKE_A",
    "FLOOR_SNAKE_A_1",
    "FLOOR_SNAKE_A_2",
    "FLOOR_SNAKE_A_3",
    "FLOOR_SNAKE_C",
    "FLOOR_SNAKE_C_1",
    "FLOOR_SNAKE_C_2",
    "FLOOR_SNAKE_C_3",
    "FLOOR_SNAKE_D",
    "FLOOR_SNAKE_D_1",
    "FLOOR_SNAKE_D_2",
    "FLOOR_SNAKE_D_3",
    "FLOOR_SWAMP",
    "FLOOR_SWAMP_1",
    "FLOOR_SWAMP_2",
    "FLOOR_SWAMP_3",
    "FLOOR_SPIDER",
    "FLOOR_SPIDER_1",
    "FLOOR_SPIDER_2",
    "FLOOR_SPIDER_3",
    "FLOOR_SPIDER_4",
    "FLOOR_SPIDER_5",
    "FLOOR_SPIDER_6",
    "FLOOR_SPIDER_7",
    "FLOOR_SPIDER_8",
    "FLOOR_SPIDER_9",
    "FLOOR_SPIDER_10",
    "FLOOR_SPIDER_11",
    "FLOOR_TOMB",
    "FLOOR_TOMB_1",
    "FLOOR_TOMB_2",
    "FLOOR_TOMB_3",
    "FLOOR_VAULT",
    "FLOOR_VAULT_1",
    "FLOOR_VAULT_2",
    "FLOOR_VAULT_3",
    "FLOOR_VINES",
    "FLOOR_VINES_1",
    "FLOOR_VINES_2",
    "FLOOR_VINES_3",
    "FLOOR_VINES_4",
    "FLOOR_VINES_5",
    "FLOOR_VINES_6",
    "FLOOR_ROUGH",
    "FLOOR_ROUGH_1",
    "FLOOR_ROUGH_2",
    "FLOOR_ROUGH_3",
    "FLOOR_ROUGH_BLUE",
    "FLOOR_ROUGH_BLUE_1",
    "FLOOR_ROUGH_BLUE_2",
    "FLOOR_ROUGH_BLUE_3",
    "FLOOR_ROUGH_GREEN",
    "FLOOR_ROUGH_GREEN_1",
    "FLOOR_ROUGH_GREEN_2",
    "FLOOR_ROUGH_GREEN_3",
    "FLOOR_ROUGH_CYAN",
    "FLOOR_ROUGH_CYAN_1",
    "FLOOR_ROUGH_CYAN_2",
    "FLOOR_ROUGH_CYAN_3",
    "FLOOR_ROUGH_MAGENTA",
    "FLOOR_ROUGH_MAGENTA_1",
    "FLOOR_ROUGH_MAGENTA_2",
    "FLOOR_ROUGH_MAGENTA_3",
    "FLOOR_ROUGH_BROWN",
    "FLOOR_ROUGH_BROWN_1",
    "FLOOR_ROUGH_BROWN_2",
    "FLOOR_ROUGH_BROWN_3",
    "FLOOR_ROUGH_LIGHTGRAY",
    "FLOOR_ROUGH_LIGHTGRAY_1",
    "FLOOR_ROUGH_LIGHTGRAY_2",
    "FLOOR_ROUGH_LIGHTGRAY_3",
    "FLOOR_ROUGH_DARKGRAY",
    "FLOOR_ROUGH_DARKGRAY_1",
    "FLOOR_ROUGH_DARKGRAY_2",
    "FLOOR_ROUGH_DARKGRAY_3",
    "FLOOR_ROUGH_LIGHTBLUE",
    "FLOOR_ROUGH_LIGHTBLUE_1",
    "FLOOR_ROUGH_LIGHTBLUE_2",
    "FLOOR_ROUGH_LIGHTBLUE_3",
    "FLOOR_ROUGH_LIGHTGREEN",
    "FLOOR_ROUGH_LIGHTGREEN_1",
    "FLOOR_ROUGH_LIGHTGREEN_2",
    "FLOOR_ROUGH_LIGHTGREEN_3",
    "FLOOR_ROUGH_LIGHTCYAN",
    "FLOOR_ROUGH_LIGHTCYAN_1",
    "FLOOR_ROUGH_LIGHTCYAN_2",
    "FLOOR_ROUGH_LIGHTCYAN_3",
    "FLOOR_ROUGH_LIGHTRED",
    "FLOOR_ROUGH_LIGHTRED_1",
    "FLOOR_ROUGH_LIGHTRED_2",
    "FLOOR_ROUGH_LIGHTRED_3",
    "FLOOR_ROUGH_LIGHTMAGENTA",
    "FLOOR_ROUGH_LIGHTMAGENTA_1",
    "FLOOR_ROUGH_LIGHTMAGENTA_2",
    "FLOOR_ROUGH_LIGHTMAGENTA_3",
    "FLOOR_ROUGH_YELLOW",
    "FLOOR_ROUGH_YELLOW_1",
    "FLOOR_ROUGH_YELLOW_2",
    "FLOOR_ROUGH_YELLOW_3",
    "FLOOR_ROUGH_WHITE",
    "FLOOR_ROUGH_WHITE_1",
    "FLOOR_ROUGH_WHITE_2",
    "FLOOR_ROUGH_WHITE_3",
    "FLOOR_SAND",
    "FLOOR_SAND_1",
    "FLOOR_SAND_2",
    "FLOOR_SAND_3",
    "FLOOR_SAND_4",
    "FLOOR_SAND_5",
    "FLOOR_SAND_6",
    "FLOOR_SAND_7",
    "FLOOR_COBBLE_BLOOD",
    "FLOOR_COBBLE_BLOOD_1",
    "FLOOR_COBBLE_BLOOD_2",
    "FLOOR_COBBLE_BLOOD_3",
    "FLOOR_COBBLE_BLOOD_4",
    "FLOOR_COBBLE_BLOOD_5",
    "FLOOR_COBBLE_BLOOD_6",
    "FLOOR_COBBLE_BLOOD_7",
    "FLOOR_COBBLE_BLOOD_8",
    "FLOOR_COBBLE_BLOOD_9",
    "FLOOR_COBBLE_BLOOD_10",
    "FLOOR_COBBLE_BLOOD_11",
    "FLOOR_MARBLE",
    "FLOOR_MARBLE_1",
    "FLOOR_MARBLE_2",
    "FLOOR_MARBLE_3",
    "FLOOR_MARBLE_4",
    "FLOOR_MARBLE_5",
    "FLOOR_SANDSTONE",
    "FLOOR_SANDSTONE_1",
    "FLOOR_SANDSTONE_2",
    "FLOOR_SANDSTONE_3",
    "FLOOR_SANDSTONE_4",
    "FLOOR_SANDSTONE_5",
    "FLOOR_SANDSTONE_6",
    "FLOOR_SANDSTONE_7",
    "FLOOR_SANDSTONE_8",
    "FLOOR_SANDSTONE_9",
    "FLOOR_VOLCANIC",
    "FLOOR_VOLCANIC_1",
    "FLOOR_VOLCANIC_2",
    "FLOOR_VOLCANIC_3",
    "FLOOR_VOLCANIC_4",
    "FLOOR_VOLCANIC_5",
    "FLOOR_VOLCANIC_6",
    "FLOOR_CRYSTAL_SQUARES",
    "FLOOR_CRYSTAL_SQUARES_1",
    "FLOOR_CRYSTAL_SQUARES_2",
    "FLOOR_CRYSTAL_SQUARES_3",
    "FLOOR_CRYSTAL_SQUARES_4",
    "FLOOR_CRYSTAL_SQUARES_5",
    "FLOOR_GRASS",
    "FLOOR_GRASS_1",
    "FLOOR_GRASS_2",
    "FLOOR_GRASS_3",
    "FLOOR_GRASS_4",
    "FLOOR_GRASS_5",
    "FLOOR_GRASS_6",
    "FLOOR_GRASS_7",
    "FLOOR_GRASS_8",
    "FLOOR_GRASS_9",
    "FLOOR_GRASS_10",
    "FLOOR_GRASS_11",
    "HALO_GRASS",
    "HALO_GRASS_1",
    "HALO_GRASS_2",
    "HALO_GRASS_3",
    "HALO_GRASS_4",
    "HALO_GRASS_5",
    "HALO_GRASS_6",
    "HALO_GRASS_7",
    "HALO_GRASS_8",
    "FLOOR_GRASS_DIRT_MIX",
    "FLOOR_GRASS_DIRT_MIX_1",
    "FLOOR_GRASS_DIRT_MIX_2",
    "FLOOR_NERVES",
    "FLOOR_NERVES_1",
    "FLOOR_NERVES_2",
    "FLOOR_NERVES_3",
    "FLOOR_NERVES_4",
    "FLOOR_NERVES_5",
    "FLOOR_NERVES_6",
    "HALO_GRASS2",
    "HALO_GRASS2_1",
    "HALO_GRASS2_2",
    "HALO_GRASS2_3",
    "HALO_GRASS2_4",
    "HALO_GRASS2_5",
    "HALO_GRASS2_6",
    "HALO_GRASS2_7",
    "HALO_GRASS2_8",
    "HALO_VAULT",
    "HALO_VAULT_1",
    "HALO_VAULT_2",
    "HALO_VAULT_3",
    "HALO_VAULT_4",
    "HALO_VAULT_5",
    "HALO_VAULT_6",
    "HALO_VAULT_7",
    "HALO_VAULT_8",
    "FLOOR_DIRT",
    "FLOOR_DIRT_1",
    "FLOOR_DIRT_2",
    "HALO_DIRT",
    "HALO_DIRT_1",
    "HALO_DIRT_2",
    "HALO_DIRT_3",
    "HALO_DIRT_4",
    "HALO_DIRT_5",
    "HALO_DIRT_6",
    "HALO_DIRT_7",
    "HALO_DIRT_8",
    "TUTORIAL_PAD",
    "FLOOR_LIMESTONE",
    "FLOOR_LIMESTONE_1",
    "FLOOR_LIMESTONE_2",
    "FLOOR_LIMESTONE_3",
    "FLOOR_LIMESTONE_4",
    "FLOOR_LIMESTONE_5",
    "FLOOR_LIMESTONE_6",
    "FLOOR_LIMESTONE_7",
    "FLOOR_LIMESTONE_8",
    "FLOOR_LIMESTONE_9",
    "SIGIL_CURVE_N_E",
    "SIGIL_CURVE_N_W",
    "SIGIL_CURVE_S_E",
    "SIGIL_CURVE_S_W",
    "SIGIL_STRAIGHT_E_W",
    "SIGIL_STRAIGHT_N_S",
    "SIGIL_STRAIGHT_NE_SW",
    "SIGIL_STRAIGHT_NW_SE",
    "SIGIL_CROSS",
    "SIGIL_CIRCLE",
    "SIGIL_RHOMBUS",
    "SIGIL_Y",
    "SIGIL_Y_INVERTED",
    "SIGIL_Y_RIGHT",
    "SIGIL_Y_LEFT",
    "SIGIL_Y_LEFTLEANING",
    "SIGIL_Y_RIGHTLEANING",
    "SIGIL_ALGIZ_LEFT",
    "SIGIL_ALGIZ_RIGHT",
    "SIGIL_STRAIGHT_E_NW",
    "SIGIL_STRAIGHT_E_SW",
    "SIGIL_STRAIGHT_W_NE",
    "SIGIL_STRAIGHT_W_SE",
    "SIGIL_STRAIGHT_N_SE",
    "SIGIL_STRAIGHT_N_SW",
    "SIGIL_STRAIGHT_S_NE",
    "SIGIL_STRAIGHT_S_NW",
    "SIGIL_FOURWAY",
    "SIGIL_SHARP_E_NE",
    "SIGIL_SHARP_W_SW",
    "SIGIL_STRAIGHT_E_NE_SW",
    "FLOOR_INFERNAL",
    "FLOOR_INFERNAL_1",
    "FLOOR_INFERNAL_2",
    "FLOOR_INFERNAL_3",
    "FLOOR_INFERNAL_4",
    "FLOOR_INFERNAL_5",
    "FLOOR_INFERNAL_6",
    "FLOOR_INFERNAL_7",
    "FLOOR_INFERNAL_8",
    "FLOOR_INFERNAL_9",
    "FLOOR_INFERNAL_10",
    "FLOOR_INFERNAL_11",
    "FLOOR_INFERNAL_12",
    "FLOOR_INFERNAL_13",
    "FLOOR_INFERNAL_14",
    "FLOOR_INFERNAL_BLANK",
    "FLOOR_LABYRINTH",
    "FLOOR_LABYRINTH_1",
    "FLOOR_LABYRINTH_2",
    "FLOOR_LABYRINTH_3",
    "FLOOR_CRYPT",
    "FLOOR_CRYPT_1",
    "FLOOR_CRYPT_2",
    "FLOOR_CRYPT_3",
    "FLOOR_CRYPT_4",
    "FLOOR_CRYPT_5",
    "FLOOR_CRYPT_6",
    "FLOOR_CRYPT_7",
    "FLOOR_IRON",
    "FLOOR_IRON_1",
    "FLOOR_IRON_2",
    "FLOOR_IRON_3",
    "FLOOR_IRON_4",
    "FLOOR_IRON_5",
    "FLOOR_BLACK_COBALT",
    "FLOOR_BLACK_COBALT_1",
    "FLOOR_BLACK_COBALT_2",
    "FLOOR_BLACK_COBALT_3",
    "FLOOR_BLACK_COBALT_4",
    "FLOOR_BLACK_COBALT_5",
    "FLOOR_BLACK_COBALT_6",
    "FLOOR_BLACK_COBALT_7",
    "FLOOR_BLACK_COBALT_8",
    "FLOOR_BLACK_COBALT_9",
    "FLOOR_BLACK_COBALT_10",
    "FLOOR_BLACK_COBALT_11",
    "FLOOR_FROZEN",
    "FLOOR_FROZEN_1",
    "FLOOR_FROZEN_2",
    "FLOOR_FROZEN_3",
    "FLOOR_FROZEN_4",
    "FLOOR_FROZEN_5",
    "FLOOR_FROZEN_6",
    "FLOOR_FROZEN_7",
    "FLOOR_DEMONIC",
    "FLOOR_DEMONIC_1",
    "FLOOR_DEMONIC_2",
    "FLOOR_DEMONIC_3",
    "FLOOR_DEMONIC_4",
    "FLOOR_DEMONIC_5",
    "FLOOR_DEMONIC_6",
    "FLOOR_DEMONIC_7",
    "FLOOR_DEMONIC_8",
    "FLOOR_DEMONIC_BLUE",
    "FLOOR_DEMONIC_BLUE_1",
    "FLOOR_DEMONIC_BLUE_2",
    "FLOOR_DEMONIC_BLUE_3",
    "FLOOR_DEMONIC_BLUE_4",
    "FLOOR_DEMONIC_BLUE_5",
    "FLOOR_DEMONIC_BLUE_6",
    "FLOOR_DEMONIC_BLUE_7",
    "FLOOR_DEMONIC_BLUE_8",
    "FLOOR_DEMONIC_GREEN",
    "FLOOR_DEMONIC_GREEN_1",
    "FLOOR_DEMONIC_GREEN_2",
    "FLOOR_DEMONIC_GREEN_3",
    "FLOOR_DEMONIC_GREEN_4",
    "FLOOR_DEMONIC_GREEN_5",
    "FLOOR_DEMONIC_GREEN_6",
    "FLOOR_DEMONIC_GREEN_7",
    "FLOOR_DEMONIC_GREEN_8",
    "FLOOR_DEMONIC_CYAN",
    "FLOOR_DEMONIC_CYAN_1",
    "FLOOR_DEMONIC_CYAN_2",
    "FLOOR_DEMONIC_CYAN_3",
    "FLOOR_DEMONIC_CYAN_4",
    "FLOOR_DEMONIC_CYAN_5",
    "FLOOR_DEMONIC_CYAN_6",
    "FLOOR_DEMONIC_CYAN_7",
    "FLOOR_DEMONIC_CYAN_8",
    "FLOOR_DEMONIC_MAGENTA",
    "FLOOR_DEMONIC_MAGENTA_1",
    "FLOOR_DEMONIC_MAGENTA_2",
    "FLOOR_DEMONIC_MAGENTA_3",
    "FLOOR_DEMONIC_MAGENTA_4",
    "FLOOR_DEMONIC_MAGENTA_5",
    "FLOOR_DEMONIC_MAGENTA_6",
    "FLOOR_DEMONIC_MAGENTA_7",
    "FLOOR_DEMONIC_MAGENTA_8",
    "FLOOR_DEMONIC_BROWN",
    "FLOOR_DEMONIC_BROWN_1",
    "FLOOR_DEMONIC_BROWN_2",
    "FLOOR_DEMONIC_BROWN_3",
    "FLOOR_DEMONIC_BROWN_4",
    "FLOOR_DEMONIC_BROWN_5",
    "FLOOR_DEMONIC_BROWN_6",
    "FLOOR_DEMONIC_BROWN_7",
    "FLOOR_DEMONIC_BROWN_8",
    "FLOOR_DEMONIC_LIGHTGRAY",
    "FLOOR_DEMONIC_LIGHTGRAY_1",
    "FLOOR_DEMONIC_LIGHTGRAY_2",
    "FLOOR_DEMONIC_LIGHTGRAY_3",
    "FLOOR_DEMONIC_LIGHTGRAY_4",
    "FLOOR_DEMONIC_LIGHTGRAY_5",
    "FLOOR_DEMONIC_LIGHTGRAY_6",
    "FLOOR_DEMONIC_LIGHTGRAY_7",
    "FLOOR_DEMONIC_LIGHTGRAY_8",
    "FLOOR_DEMONIC_DARKGRAY",
    "FLOOR_DEMONIC_DARKGRAY_1",
    "FLOOR_DEMONIC_DARKGRAY_2",
    "FLOOR_DEMONIC_DARKGRAY_3",
    "FLOOR_DEMONIC_DARKGRAY_4",
    "FLOOR_DEMONIC_DARKGRAY_5",
    "FLOOR_DEMONIC_DARKGRAY_6",
    "FLOOR_DEMONIC_DARKGRAY_7",
    "FLOOR_DEMONIC_DARKGRAY_8",
    "FLOOR_GREEN_BONES",
    "FLOOR_GREEN_BONES_1",
    "FLOOR_GREEN_BONES_2",
    "FLOOR_GREEN_BONES_3",
    "FLOOR_GREEN_BONES_4",
    "FLOOR_GREEN_BONES_5",
    "FLOOR_GREEN_BONES_6",
    "FLOOR_GREEN_BONES_7",
    "FLOOR_GREEN_BONES_8",
    "FLOOR_GREEN_BONES_9",
    "FLOOR_GREEN_BONES_10",
    "FLOOR_GREEN_BONES_11",
    "FLOOR_WOODGROUND",
    "FLOOR_WOODGROUND_1",
    "FLOOR_WOODGROUND_2",
    "FLOOR_WOODGROUND_3",
    "FLOOR_WOODGROUND_4",
    "FLOOR_WOODGROUND_5",
    "FLOOR_WOODGROUND_6",
    "FLOOR_WOODGROUND_7",
    "FLOOR_WOODGROUND_8",
    "FLOOR_CAGE",
    "FLOOR_CAGE_1",
    "FLOOR_CAGE_2",
    "FLOOR_CAGE_3",
    "FLOOR_CAGE_4",
    "FLOOR_CAGE_5",
};

const char *tile_floor_name(tileidx_t idx)
{
    assert(idx >= 0 && idx < TILE_FLOOR_MAX);
    return _tile_floor_name[idx - 0];
}

static tile_info _tile_floor_info[TILE_FLOOR_MAX - 0] =
{
    tile_info(32, 32, 0, 0, 0, 0, 32, 32),
    tile_info(32, 32, 0, 0, 32, 0, 64, 32),
    tile_info(32, 32, 0, 0, 64, 0, 96, 32),
    tile_info(32, 32, 0, 0, 96, 0, 128, 32),
    tile_info(32, 32, 0, 0, 128, 0, 160, 32),
    tile_info(32, 32, 0, 0, 160, 0, 192, 32),
    tile_info(32, 32, 0, 0, 192, 0, 224, 32),
    tile_info(32, 32, 0, 0, 224, 0, 256, 32),
    tile_info(32, 32, 0, 0, 256, 0, 288, 32),
    tile_info(32, 32, 0, 0, 288, 0, 320, 32),
    tile_info(32, 32, 0, 0, 320, 0, 352, 32),
    tile_info(32, 32, 0, 0, 352, 0, 384, 32),
    tile_info(32, 32, 0, 0, 384, 0, 416, 32),
    tile_info(32, 32, 0, 0, 416, 0, 448, 32),
    tile_info(32, 32, 0, 0, 448, 0, 480, 32),
    tile_info(32, 32, 0, 0, 480, 0, 512, 32),
    tile_info(32, 32, 0, 0, 512, 0, 544, 32),
    tile_info(32, 32, 0, 0, 544, 0, 576, 32),
    tile_info(32, 32, 0, 0, 576, 0, 608, 32),
    tile_info(32, 32, 0, 0, 608, 0, 640, 32),
    tile_info(32, 32, 0, 0, 640, 0, 672, 32),
    tile_info(32, 32, 0, 0, 672, 0, 704, 32),
    tile_info(32, 32, 0, 0, 704, 0, 736, 32),
    tile_info(32, 32, 0, 0, 736, 0, 768, 32),
    tile_info(32, 32, 0, 0, 768, 0, 800, 32),
    tile_info(32, 32, 0, 0, 800, 0, 832, 32),
    tile_info(32, 32, 0, 0, 832, 0, 864, 32),
    tile_info(32, 32, 0, 0, 864, 0, 896, 32),
    tile_info(32, 32, 0, 0, 896, 0, 928, 32),
    tile_info(32, 32, 0, 0, 928, 0, 960, 32),
    tile_info(32, 32, 0, 0, 960, 0, 992, 32),
    tile_info(32, 32, 0, 0, 992, 0, 1024, 32),
    tile_info(32, 32, 0, 0, 0, 32, 32, 64),
    tile_info(32, 32, 0, 0, 32, 32, 64, 64),
    tile_info(32, 32, 0, 0, 64, 32, 96, 64),
    tile_info(32, 32, 0, 0, 96, 32, 128, 64),
    tile_info(32, 32, 0, 0, 128, 32, 160, 64),
    tile_info(32, 32, 0, 0, 160, 32, 192, 64),
    tile_info(32, 32, 0, 0, 192, 32, 224, 64),
    tile_info(32, 32, 0, 0, 224, 32, 256, 64),
    tile_info(32, 32, 0, 0, 256, 32, 288, 64),
    tile_info(32, 32, 0, 0, 288, 32, 320, 64),
    tile_info(32, 32, 0, 0, 320, 32, 352, 64),
    tile_info(32, 32, 0, 0, 352, 32, 384, 64),
    tile_info(32, 32, 0, 0, 384, 32, 416, 64),
    tile_info(32, 32, 0, 0, 416, 32, 448, 64),
    tile_info(32, 32, 0, 0, 448, 32, 480, 64),
    tile_info(32, 32, 0, 0, 480, 32, 512, 64),
    tile_info(32, 32, 0, 0, 512, 32, 544, 64),
    tile_info(32, 32, 0, 0, 544, 32, 576, 64),
    tile_info(32, 32, 0, 0, 576, 32, 608, 64),
    tile_info(32, 32, 0, 0, 608, 32, 640, 64),
    tile_info(32, 32, 0, 0, 640, 32, 672, 64),
    tile_info(32, 32, 0, 0, 672, 32, 704, 64),
    tile_info(32, 32, 0, 0, 704, 32, 736, 64),
    tile_info(32, 32, 0, 0, 736, 32, 768, 64),
    tile_info(32, 32, 0, 0, 768, 32, 800, 64),
    tile_info(32, 32, 0, 0, 800, 32, 832, 64),
    tile_info(32, 32, 0, 0, 832, 32, 864, 64),
    tile_info(32, 32, 0, 0, 864, 32, 896, 64),
    tile_info(32, 32, 0, 0, 896, 32, 928, 64),
    tile_info(32, 32, 0, 0, 928, 32, 960, 64),
    tile_info(32, 32, 0, 0, 960, 32, 992, 64),
    tile_info(32, 32, 0, 0, 992, 32, 1024, 64),
    tile_info(32, 32, 0, 0, 0, 64, 32, 96),
    tile_info(32, 32, 0, 0, 32, 64, 64, 96),
    tile_info(32, 32, 0, 0, 64, 64, 96, 96),
    tile_info(32, 32, 0, 0, 96, 64, 128, 96),
    tile_info(32, 32, 0, 0, 128, 64, 160, 96),
    tile_info(32, 32, 0, 0, 160, 64, 192, 96),
    tile_info(32, 32, 0, 0, 192, 64, 224, 96),
    tile_info(32, 32, 0, 0, 224, 64, 256, 96),
    tile_info(32, 32, 0, 0, 256, 64, 288, 96),
    tile_info(32, 32, 0, 0, 288, 64, 320, 96),
    tile_info(32, 32, 0, 0, 320, 64, 352, 96),
    tile_info(32, 32, 0, 0, 352, 64, 384, 96),
    tile_info(32, 32, 0, 0, 384, 64, 416, 96),
    tile_info(32, 32, 0, 0, 416, 64, 448, 96),
    tile_info(32, 32, 0, 0, 448, 64, 480, 96),
    tile_info(32, 32, 0, 0, 480, 64, 512, 96),
    tile_info(32, 32, 0, 0, 512, 64, 544, 96),
    tile_info(32, 32, 0, 0, 544, 64, 576, 96),
    tile_info(32, 32, 0, 0, 576, 64, 608, 96),
    tile_info(32, 32, 0, 0, 608, 64, 640, 96),
    tile_info(32, 32, 0, 0, 640, 64, 672, 96),
    tile_info(32, 32, 0, 0, 672, 64, 704, 96),
    tile_info(32, 32, 0, 0, 704, 64, 736, 96),
    tile_info(32, 32, 0, 0, 736, 64, 768, 96),
    tile_info(32, 32, 0, 0, 768, 64, 800, 96),
    tile_info(32, 32, 0, 0, 800, 64, 832, 96),
    tile_info(32, 32, 0, 0, 832, 64, 864, 96),
    tile_info(32, 32, 0, 0, 864, 64, 896, 96),
    tile_info(32, 32, 0, 0, 896, 64, 928, 96),
    tile_info(32, 32, 0, 0, 928, 64, 960, 96),
    tile_info(32, 32, 0, 0, 960, 64, 992, 96),
    tile_info(32, 32, 0, 0, 992, 64, 1024, 96),
    tile_info(32, 32, 0, 0, 0, 96, 32, 128),
    tile_info(32, 32, 0, 0, 32, 96, 64, 128),
    tile_info(32, 32, 0, 0, 64, 96, 96, 128),
    tile_info(32, 32, 0, 0, 96, 96, 128, 128),
    tile_info(32, 32, 0, 0, 128, 96, 160, 128),
    tile_info(32, 32, 0, 0, 160, 96, 192, 128),
    tile_info(32, 32, 0, 0, 192, 96, 224, 128),
    tile_info(32, 32, 0, 0, 224, 96, 256, 128),
    tile_info(32, 32, 0, 0, 256, 96, 288, 128),
    tile_info(32, 32, 0, 0, 288, 96, 320, 128),
    tile_info(32, 32, 0, 0, 320, 96, 352, 128),
    tile_info(32, 32, 0, 0, 352, 96, 384, 128),
    tile_info(32, 32, 0, 0, 384, 96, 416, 128),
    tile_info(32, 32, 0, 0, 416, 96, 448, 128),
    tile_info(32, 32, 0, 0, 448, 96, 480, 128),
    tile_info(32, 32, 0, 0, 480, 96, 512, 128),
    tile_info(32, 32, 0, 0, 512, 96, 544, 128),
    tile_info(32, 32, 0, 0, 544, 96, 576, 128),
    tile_info(32, 32, 0, 0, 576, 96, 608, 128),
    tile_info(32, 32, 0, 0, 608, 96, 640, 128),
    tile_info(32, 32, 0, 0, 640, 96, 672, 128),
    tile_info(32, 32, 0, 0, 672, 96, 704, 128),
    tile_info(32, 32, 0, 0, 704, 96, 736, 128),
    tile_info(32, 32, 0, 0, 736, 96, 768, 128),
    tile_info(32, 32, 0, 0, 768, 96, 800, 128),
    tile_info(32, 32, 0, 0, 800, 96, 832, 128),
    tile_info(32, 32, 0, 0, 832, 96, 864, 128),
    tile_info(32, 32, 0, 0, 864, 96, 896, 128),
    tile_info(32, 32, 0, 0, 896, 96, 928, 128),
    tile_info(32, 32, 0, 0, 928, 96, 960, 128),
    tile_info(32, 32, 0, 0, 960, 96, 992, 128),
    tile_info(32, 32, 0, 0, 992, 96, 1024, 128),
    tile_info(32, 32, 0, 0, 0, 128, 32, 160),
    tile_info(32, 32, 0, 0, 32, 128, 64, 160),
    tile_info(32, 32, 0, 0, 64, 128, 96, 160),
    tile_info(32, 32, 0, 0, 96, 128, 128, 160),
    tile_info(32, 32, 0, 0, 128, 128, 160, 160),
    tile_info(32, 32, 0, 0, 160, 128, 192, 160),
    tile_info(32, 32, 0, 0, 192, 128, 224, 160),
    tile_info(32, 32, 0, 0, 224, 128, 256, 160),
    tile_info(32, 32, 0, 0, 256, 128, 288, 160),
    tile_info(32, 32, 0, 0, 288, 128, 320, 160),
    tile_info(32, 32, 0, 0, 320, 128, 352, 160),
    tile_info(32, 32, 0, 0, 352, 128, 384, 160),
    tile_info(32, 32, 0, 0, 384, 128, 416, 160),
    tile_info(32, 32, 0, 0, 416, 128, 448, 160),
    tile_info(32, 32, 0, 0, 448, 128, 480, 160),
    tile_info(32, 32, 0, 0, 480, 128, 512, 160),
    tile_info(32, 32, 0, 0, 512, 128, 544, 160),
    tile_info(32, 32, 0, 0, 544, 128, 576, 160),
    tile_info(32, 32, 0, 0, 576, 128, 608, 160),
    tile_info(32, 32, 0, 0, 608, 128, 640, 160),
    tile_info(32, 32, 0, 0, 640, 128, 672, 160),
    tile_info(32, 32, 0, 0, 672, 128, 704, 160),
    tile_info(32, 32, 0, 0, 704, 128, 736, 160),
    tile_info(32, 32, 0, 0, 736, 128, 768, 160),
    tile_info(32, 32, 0, 0, 768, 128, 800, 160),
    tile_info(32, 32, 0, 0, 800, 128, 832, 160),
    tile_info(32, 32, 0, 0, 832, 128, 864, 160),
    tile_info(32, 32, 0, 0, 864, 128, 896, 160),
    tile_info(32, 32, 0, 0, 896, 128, 928, 160),
    tile_info(32, 32, 0, 0, 928, 128, 960, 160),
    tile_info(32, 32, 0, 0, 960, 128, 992, 160),
    tile_info(32, 32, 0, 0, 992, 128, 1024, 160),
    tile_info(32, 32, 0, 0, 0, 160, 32, 192),
    tile_info(32, 32, 0, 0, 32, 160, 64, 192),
    tile_info(32, 32, 0, 0, 64, 160, 96, 192),
    tile_info(32, 32, 0, 0, 96, 160, 128, 192),
    tile_info(32, 32, 0, 0, 128, 160, 160, 192),
    tile_info(32, 32, 0, 0, 160, 160, 192, 192),
    tile_info(32, 32, 0, 0, 192, 160, 224, 192),
    tile_info(32, 32, 0, 0, 224, 160, 256, 192),
    tile_info(32, 32, 0, 0, 256, 160, 288, 192),
    tile_info(32, 32, 0, 0, 288, 160, 320, 192),
    tile_info(32, 32, 0, 0, 320, 160, 352, 192),
    tile_info(32, 32, 0, 0, 352, 160, 384, 192),
    tile_info(32, 32, 0, 0, 384, 160, 416, 192),
    tile_info(32, 32, 0, 0, 416, 160, 448, 192),
    tile_info(32, 32, 0, 0, 448, 160, 480, 192),
    tile_info(32, 32, 0, 0, 480, 160, 512, 192),
    tile_info(32, 32, 0, 0, 512, 160, 544, 192),
    tile_info(32, 32, 0, 0, 544, 160, 576, 192),
    tile_info(32, 32, 0, 0, 576, 160, 608, 192),
    tile_info(32, 32, 0, 0, 608, 160, 640, 192),
    tile_info(32, 32, 0, 0, 640, 160, 672, 192),
    tile_info(32, 32, 0, 0, 672, 160, 704, 192),
    tile_info(32, 32, 0, 0, 704, 160, 736, 192),
    tile_info(32, 32, 0, 0, 736, 160, 768, 192),
    tile_info(32, 32, 0, 0, 768, 160, 800, 192),
    tile_info(32, 32, 0, 0, 800, 160, 832, 167),
    tile_info(32, 32, 25, 0, 832, 160, 839, 192),
    tile_info(32, 32, 0, 25, 839, 160, 871, 167),
    tile_info(32, 32, 0, 0, 871, 160, 878, 192),
    tile_info(32, 32, 0, 0, 878, 160, 885, 167),
    tile_info(32, 32, 25, 0, 878, 167, 885, 173),
    tile_info(32, 32, 25, 25, 878, 173, 885, 180),
    tile_info(32, 32, 0, 25, 878, 180, 885, 187),
    tile_info(32, 32, 0, 0, 885, 160, 917, 192),
    tile_info(32, 32, 0, 0, 917, 160, 949, 192),
    tile_info(32, 32, 0, 0, 949, 160, 981, 192),
    tile_info(32, 32, 0, 0, 981, 160, 1013, 192),
    tile_info(32, 32, 0, 0, 0, 192, 32, 224),
    tile_info(32, 32, 0, 0, 32, 192, 64, 224),
    tile_info(32, 32, 0, 0, 64, 192, 96, 224),
    tile_info(32, 32, 0, 0, 96, 192, 128, 224),
    tile_info(32, 32, 0, 0, 128, 192, 160, 224),
    tile_info(32, 32, 0, 0, 160, 192, 192, 224),
    tile_info(32, 32, 0, 0, 192, 192, 224, 224),
    tile_info(32, 32, 0, 0, 224, 192, 256, 224),
    tile_info(32, 32, 0, 0, 256, 192, 288, 224),
    tile_info(32, 32, 0, 0, 288, 192, 320, 224),
    tile_info(32, 32, 0, 0, 320, 192, 352, 224),
    tile_info(32, 32, 0, 0, 352, 192, 384, 224),
    tile_info(32, 32, 0, 0, 384, 192, 416, 224),
    tile_info(32, 32, 0, 0, 416, 192, 448, 224),
    tile_info(32, 32, 0, 0, 448, 192, 480, 224),
    tile_info(32, 32, 0, 0, 480, 192, 512, 224),
    tile_info(32, 32, 0, 0, 512, 192, 544, 224),
    tile_info(32, 32, 0, 0, 544, 192, 576, 224),
    tile_info(32, 32, 0, 0, 576, 192, 608, 224),
    tile_info(32, 32, 0, 0, 608, 192, 640, 224),
    tile_info(32, 32, 0, 0, 640, 192, 672, 224),
    tile_info(32, 32, 0, 0, 672, 192, 704, 224),
    tile_info(32, 32, 0, 0, 704, 192, 736, 224),
    tile_info(32, 32, 0, 0, 736, 192, 768, 224),
    tile_info(32, 32, 0, 0, 768, 192, 800, 224),
    tile_info(32, 32, 0, 0, 800, 192, 832, 224),
    tile_info(32, 32, 0, 0, 832, 192, 864, 224),
    tile_info(32, 32, 0, 0, 864, 192, 896, 224),
    tile_info(32, 32, 0, 0, 896, 192, 928, 224),
    tile_info(32, 32, 0, 0, 928, 192, 960, 224),
    tile_info(32, 32, 0, 0, 960, 192, 992, 224),
    tile_info(32, 32, 0, 0, 992, 192, 1024, 224),
    tile_info(32, 32, 0, 0, 0, 224, 32, 256),
    tile_info(32, 32, 0, 0, 32, 224, 64, 256),
    tile_info(32, 32, 0, 0, 64, 224, 96, 256),
    tile_info(32, 32, 0, 0, 96, 224, 128, 256),
    tile_info(32, 32, 0, 0, 128, 224, 160, 256),
    tile_info(32, 32, 0, 0, 160, 224, 192, 256),
    tile_info(32, 32, 0, 0, 192, 224, 224, 256),
    tile_info(32, 32, 0, 0, 224, 224, 256, 256),
    tile_info(32, 32, 0, 0, 256, 224, 288, 256),
    tile_info(32, 32, 0, 0, 288, 224, 320, 256),
    tile_info(32, 32, 0, 0, 320, 224, 352, 256),
    tile_info(32, 32, 0, 0, 352, 224, 384, 256),
    tile_info(32, 32, 0, 0, 384, 224, 416, 256),
    tile_info(32, 32, 0, 0, 416, 224, 448, 256),
    tile_info(32, 32, 0, 0, 448, 224, 480, 256),
    tile_info(32, 32, 0, 0, 480, 224, 512, 256),
    tile_info(32, 32, 0, 0, 512, 224, 544, 256),
    tile_info(32, 32, 0, 0, 544, 224, 576, 256),
    tile_info(32, 32, 0, 0, 576, 224, 608, 256),
    tile_info(32, 32, 0, 0, 608, 224, 640, 256),
    tile_info(32, 32, 0, 0, 640, 224, 672, 256),
    tile_info(32, 32, 0, 0, 672, 224, 704, 256),
    tile_info(32, 32, 0, 0, 704, 224, 736, 256),
    tile_info(32, 32, 0, 0, 736, 224, 768, 256),
    tile_info(32, 32, 0, 0, 768, 224, 800, 256),
    tile_info(32, 32, 0, 0, 800, 224, 832, 256),
    tile_info(32, 32, 0, 0, 832, 224, 864, 256),
    tile_info(32, 32, 0, 0, 864, 224, 896, 256),
    tile_info(32, 32, 0, 0, 896, 224, 928, 256),
    tile_info(32, 32, 0, 0, 928, 224, 960, 256),
    tile_info(32, 32, 0, 0, 960, 224, 992, 256),
    tile_info(32, 32, 0, 0, 992, 224, 1024, 256),
    tile_info(32, 32, 0, 0, 0, 256, 32, 288),
    tile_info(32, 32, 0, 0, 32, 256, 64, 288),
    tile_info(32, 32, 0, 0, 64, 256, 96, 288),
    tile_info(32, 32, 0, 0, 96, 256, 128, 288),
    tile_info(32, 32, 0, 0, 128, 256, 160, 288),
    tile_info(32, 32, 0, 0, 160, 256, 192, 288),
    tile_info(32, 32, 0, 0, 192, 256, 224, 288),
    tile_info(32, 32, 0, 0, 224, 256, 256, 288),
    tile_info(32, 32, 0, 0, 256, 256, 288, 288),
    tile_info(32, 32, 0, 0, 288, 256, 320, 288),
    tile_info(32, 32, 0, 0, 320, 256, 352, 288),
    tile_info(32, 32, 0, 0, 352, 256, 384, 288),
    tile_info(32, 32, 0, 0, 384, 256, 416, 288),
    tile_info(32, 32, 0, 0, 416, 256, 448, 288),
    tile_info(32, 32, 0, 0, 448, 256, 480, 288),
    tile_info(32, 32, 0, 0, 480, 256, 512, 288),
    tile_info(32, 32, 0, 0, 512, 256, 544, 288),
    tile_info(32, 32, 0, 0, 544, 256, 576, 288),
    tile_info(32, 32, 0, 0, 576, 256, 608, 288),
    tile_info(32, 32, 0, 0, 608, 256, 640, 288),
    tile_info(32, 32, 0, 0, 640, 256, 672, 288),
    tile_info(32, 32, 0, 0, 672, 256, 704, 288),
    tile_info(32, 32, 0, 0, 704, 256, 736, 288),
    tile_info(32, 32, 0, 0, 736, 256, 768, 288),
    tile_info(32, 32, 0, 0, 768, 256, 800, 288),
    tile_info(32, 32, 0, 0, 800, 256, 832, 288),
    tile_info(32, 32, 0, 0, 832, 256, 864, 288),
    tile_info(32, 32, 0, 0, 864, 256, 896, 288),
    tile_info(32, 32, 0, 0, 896, 256, 928, 288),
    tile_info(32, 32, 0, 0, 928, 256, 960, 288),
    tile_info(32, 32, 0, 0, 960, 256, 992, 288),
    tile_info(32, 32, 0, 0, 992, 256, 1024, 288),
    tile_info(32, 32, 0, 0, 0, 288, 32, 320),
    tile_info(32, 32, 0, 0, 32, 288, 64, 320),
    tile_info(32, 32, 0, 0, 64, 288, 96, 320),
    tile_info(32, 32, 0, 0, 96, 288, 128, 320),
    tile_info(32, 32, 0, 0, 128, 288, 160, 320),
    tile_info(32, 32, 0, 0, 160, 288, 192, 320),
    tile_info(32, 32, 0, 0, 192, 288, 224, 320),
    tile_info(32, 32, 0, 0, 224, 288, 256, 320),
    tile_info(32, 32, 0, 0, 256, 288, 288, 320),
    tile_info(32, 32, 0, 0, 288, 288, 320, 320),
    tile_info(32, 32, 0, 0, 320, 288, 352, 320),
    tile_info(32, 32, 0, 0, 352, 288, 384, 320),
    tile_info(32, 32, 0, 0, 384, 288, 416, 320),
    tile_info(32, 32, 0, 0, 416, 288, 448, 320),
    tile_info(32, 32, 0, 0, 448, 288, 480, 320),
    tile_info(32, 32, 0, 0, 480, 288, 512, 320),
    tile_info(32, 32, 0, 0, 512, 288, 544, 320),
    tile_info(32, 32, 0, 0, 544, 288, 576, 320),
    tile_info(32, 32, 0, 0, 576, 288, 608, 320),
    tile_info(32, 32, 0, 0, 608, 288, 640, 320),
    tile_info(32, 32, 0, 0, 640, 288, 672, 320),
    tile_info(32, 32, 0, 0, 672, 288, 704, 320),
    tile_info(32, 32, 0, 0, 704, 288, 736, 320),
    tile_info(32, 32, 0, 0, 736, 288, 768, 320),
    tile_info(32, 32, 0, 0, 768, 288, 800, 320),
    tile_info(32, 32, 0, 0, 800, 288, 832, 320),
    tile_info(32, 32, 0, 0, 832, 288, 864, 320),
    tile_info(32, 32, 0, 0, 864, 288, 896, 320),
    tile_info(32, 32, 0, 0, 896, 288, 928, 320),
    tile_info(32, 32, 0, 0, 928, 288, 960, 320),
    tile_info(32, 32, 0, 0, 960, 288, 992, 320),
    tile_info(32, 32, 0, 0, 992, 288, 1024, 320),
    tile_info(32, 32, 0, 0, 0, 320, 32, 352),
    tile_info(32, 32, 0, 0, 32, 320, 64, 352),
    tile_info(32, 32, 0, 0, 64, 320, 96, 352),
    tile_info(32, 32, 0, 0, 96, 320, 128, 352),
    tile_info(32, 32, 0, 0, 128, 320, 160, 352),
    tile_info(32, 32, 0, 0, 160, 320, 192, 352),
    tile_info(32, 32, 0, 0, 192, 320, 224, 352),
    tile_info(32, 32, 0, 0, 224, 320, 256, 352),
    tile_info(32, 32, 0, 0, 256, 320, 288, 352),
    tile_info(32, 32, 0, 0, 288, 320, 320, 352),
    tile_info(32, 32, 0, 0, 320, 320, 352, 352),
    tile_info(32, 32, 0, 0, 352, 320, 384, 352),
    tile_info(32, 32, 0, 0, 384, 320, 416, 352),
    tile_info(32, 32, 0, 0, 416, 320, 448, 352),
    tile_info(32, 32, 0, 0, 448, 320, 480, 352),
    tile_info(32, 32, 0, 0, 480, 320, 512, 352),
    tile_info(32, 32, 0, 0, 512, 320, 544, 352),
    tile_info(32, 32, 0, 0, 544, 320, 576, 352),
    tile_info(32, 32, 0, 0, 576, 320, 608, 352),
    tile_info(32, 32, 0, 0, 608, 320, 640, 352),
    tile_info(32, 32, 0, 0, 640, 320, 672, 352),
    tile_info(32, 32, 0, 0, 672, 320, 704, 352),
    tile_info(32, 32, 0, 0, 704, 320, 736, 352),
    tile_info(32, 32, 0, 0, 736, 320, 768, 352),
    tile_info(32, 32, 0, 0, 768, 320, 800, 352),
    tile_info(32, 32, 0, 0, 800, 320, 832, 352),
    tile_info(32, 32, 0, 0, 832, 320, 864, 352),
    tile_info(32, 32, 0, 0, 864, 320, 896, 352),
    tile_info(32, 32, 0, 0, 896, 320, 928, 352),
    tile_info(32, 32, 0, 0, 928, 320, 960, 352),
    tile_info(32, 32, 0, 0, 960, 320, 992, 352),
    tile_info(32, 32, 0, 0, 992, 320, 1024, 352),
    tile_info(32, 32, 0, 0, 0, 352, 32, 384),
    tile_info(32, 32, 0, 0, 32, 352, 64, 384),
    tile_info(32, 32, 0, 0, 64, 352, 96, 384),
    tile_info(32, 32, 0, 0, 96, 352, 128, 384),
    tile_info(32, 32, 0, 0, 128, 352, 160, 384),
    tile_info(32, 32, 0, 0, 160, 352, 192, 384),
    tile_info(32, 32, 0, 0, 192, 352, 224, 384),
    tile_info(32, 32, 0, 0, 224, 352, 256, 384),
    tile_info(32, 32, 0, 0, 256, 352, 288, 384),
    tile_info(32, 32, 0, 0, 288, 352, 320, 384),
    tile_info(32, 32, 0, 0, 320, 352, 352, 384),
    tile_info(32, 32, 0, 0, 352, 352, 384, 384),
    tile_info(32, 32, 0, 0, 384, 352, 416, 384),
    tile_info(32, 32, 0, 0, 416, 352, 448, 384),
    tile_info(32, 32, 0, 0, 448, 352, 480, 384),
    tile_info(32, 32, 0, 0, 480, 352, 512, 384),
    tile_info(32, 32, 0, 0, 512, 352, 544, 384),
    tile_info(32, 32, 0, 0, 544, 352, 576, 384),
    tile_info(32, 32, 0, 0, 576, 352, 608, 384),
    tile_info(32, 32, 0, 0, 608, 352, 640, 384),
    tile_info(32, 32, 0, 0, 640, 352, 672, 384),
    tile_info(32, 32, 0, 0, 672, 352, 704, 384),
    tile_info(32, 32, 0, 0, 704, 352, 736, 384),
    tile_info(32, 32, 0, 0, 736, 352, 768, 384),
    tile_info(32, 32, 0, 0, 768, 352, 800, 384),
    tile_info(32, 32, 0, 0, 800, 352, 832, 384),
    tile_info(32, 32, 0, 0, 832, 352, 864, 384),
    tile_info(32, 32, 0, 0, 864, 352, 896, 384),
    tile_info(32, 32, 0, 0, 896, 352, 928, 384),
    tile_info(32, 32, 0, 0, 928, 352, 960, 384),
    tile_info(32, 32, 0, 0, 960, 352, 992, 384),
    tile_info(32, 32, 0, 0, 992, 352, 1024, 384),
    tile_info(32, 32, 0, 0, 0, 384, 32, 416),
    tile_info(32, 32, 0, 0, 32, 384, 64, 416),
    tile_info(32, 32, 0, 0, 64, 384, 96, 416),
    tile_info(32, 32, 0, 0, 96, 384, 128, 416),
    tile_info(32, 32, 0, 0, 128, 384, 160, 416),
    tile_info(32, 32, 0, 0, 160, 384, 192, 416),
    tile_info(32, 32, 0, 0, 192, 384, 224, 416),
    tile_info(32, 32, 0, 0, 224, 384, 256, 416),
    tile_info(32, 32, 0, 0, 256, 384, 288, 416),
    tile_info(32, 32, 0, 0, 288, 384, 320, 416),
    tile_info(32, 32, 0, 0, 320, 384, 352, 416),
    tile_info(32, 32, 0, 0, 352, 384, 384, 416),
    tile_info(32, 32, 0, 0, 384, 384, 416, 416),
    tile_info(32, 32, 0, 0, 416, 384, 448, 416),
    tile_info(32, 32, 0, 0, 448, 384, 480, 416),
    tile_info(32, 32, 0, 0, 480, 384, 512, 416),
    tile_info(32, 32, 0, 0, 512, 384, 544, 416),
    tile_info(32, 32, 0, 0, 544, 384, 576, 416),
    tile_info(32, 32, 0, 0, 576, 384, 608, 416),
    tile_info(32, 32, 0, 0, 608, 384, 640, 416),
    tile_info(32, 32, 0, 0, 640, 384, 672, 416),
    tile_info(32, 32, 0, 0, 672, 384, 704, 416),
    tile_info(32, 32, 0, 0, 704, 384, 736, 416),
    tile_info(32, 32, 0, 0, 736, 384, 768, 416),
    tile_info(32, 32, 0, 0, 768, 384, 800, 416),
    tile_info(32, 32, 0, 0, 800, 384, 832, 416),
    tile_info(32, 32, 0, 0, 832, 384, 864, 416),
    tile_info(32, 32, 0, 0, 864, 384, 896, 416),
    tile_info(32, 32, 0, 0, 896, 384, 928, 416),
    tile_info(32, 32, 0, 0, 928, 384, 960, 416),
    tile_info(32, 32, 0, 0, 960, 384, 992, 416),
    tile_info(32, 32, 0, 0, 992, 384, 1024, 416),
    tile_info(32, 32, 0, 0, 0, 416, 32, 448),
    tile_info(32, 32, 0, 0, 32, 416, 64, 448),
    tile_info(32, 32, 0, 0, 64, 416, 96, 448),
    tile_info(32, 32, 0, 0, 96, 416, 128, 448),
    tile_info(32, 32, 0, 0, 128, 416, 160, 448),
    tile_info(32, 32, 0, 0, 160, 416, 192, 448),
    tile_info(32, 32, 0, 0, 192, 416, 224, 448),
    tile_info(32, 32, 0, 0, 224, 416, 256, 448),
    tile_info(32, 32, 0, 0, 256, 416, 288, 448),
    tile_info(32, 32, 0, 0, 288, 416, 320, 448),
    tile_info(32, 32, 0, 0, 320, 416, 352, 448),
    tile_info(32, 32, 0, 0, 352, 416, 384, 448),
    tile_info(32, 32, 0, 0, 384, 416, 416, 448),
    tile_info(32, 32, 0, 0, 416, 416, 448, 448),
    tile_info(32, 32, 0, 0, 448, 416, 480, 448),
    tile_info(32, 32, 0, 0, 480, 416, 512, 448),
    tile_info(32, 32, 0, 0, 512, 416, 544, 448),
    tile_info(32, 32, 0, 0, 544, 416, 576, 448),
    tile_info(32, 32, 0, 0, 576, 416, 608, 448),
    tile_info(32, 32, 0, 0, 608, 416, 640, 448),
    tile_info(32, 32, 0, 0, 640, 416, 672, 448),
    tile_info(32, 32, 0, 0, 672, 416, 704, 448),
    tile_info(32, 32, 0, 0, 704, 416, 736, 448),
    tile_info(32, 32, 0, 0, 736, 416, 768, 448),
    tile_info(32, 32, 0, 0, 768, 416, 800, 448),
    tile_info(32, 32, 0, 0, 800, 416, 832, 448),
    tile_info(32, 32, 0, 0, 832, 416, 864, 448),
    tile_info(32, 32, 0, 0, 864, 416, 896, 448),
    tile_info(32, 32, 0, 0, 896, 416, 928, 448),
    tile_info(32, 32, 0, 0, 928, 416, 960, 448),
    tile_info(32, 32, 0, 0, 960, 416, 992, 448),
    tile_info(32, 32, 0, 0, 992, 416, 1024, 448),
    tile_info(32, 32, 0, 0, 0, 448, 32, 480),
    tile_info(32, 32, 0, 0, 32, 448, 64, 480),
    tile_info(32, 32, 0, 0, 64, 448, 96, 480),
    tile_info(32, 32, 0, 0, 96, 448, 128, 480),
    tile_info(32, 32, 0, 0, 128, 448, 160, 480),
    tile_info(32, 32, 0, 0, 160, 448, 192, 480),
    tile_info(32, 32, 0, 0, 192, 448, 224, 480),
    tile_info(32, 32, 0, 0, 224, 448, 256, 480),
    tile_info(32, 32, 0, 0, 256, 448, 288, 480),
    tile_info(32, 32, 0, 0, 288, 448, 320, 480),
    tile_info(32, 32, 0, 0, 320, 448, 352, 480),
    tile_info(32, 32, 0, 0, 352, 448, 384, 480),
    tile_info(32, 32, 0, 0, 384, 448, 416, 480),
    tile_info(32, 32, 0, 0, 416, 448, 448, 480),
    tile_info(32, 32, 0, 0, 448, 448, 480, 480),
    tile_info(32, 32, 0, 0, 480, 448, 512, 480),
    tile_info(32, 32, 0, 0, 512, 448, 544, 480),
    tile_info(32, 32, 0, 0, 544, 448, 576, 480),
    tile_info(32, 32, 0, 0, 576, 448, 608, 480),
    tile_info(32, 32, 0, 0, 608, 448, 640, 480),
    tile_info(32, 32, 0, 0, 640, 448, 672, 480),
    tile_info(32, 32, 0, 0, 672, 448, 704, 480),
    tile_info(32, 32, 0, 0, 704, 448, 736, 480),
    tile_info(32, 32, 0, 0, 736, 448, 768, 480),
    tile_info(32, 32, 0, 0, 768, 448, 800, 480),
    tile_info(32, 32, 0, 0, 800, 448, 832, 480),
    tile_info(32, 32, 0, 0, 832, 448, 864, 480),
    tile_info(32, 32, 0, 0, 864, 448, 896, 480),
    tile_info(32, 32, 0, 0, 896, 448, 928, 480),
    tile_info(32, 32, 0, 0, 928, 448, 960, 480),
    tile_info(32, 32, 0, 0, 960, 448, 992, 480),
    tile_info(32, 32, 0, 0, 992, 448, 1024, 480),
    tile_info(32, 32, 0, 0, 0, 480, 32, 512),
    tile_info(32, 32, 0, 0, 32, 480, 64, 512),
    tile_info(32, 32, 0, 0, 64, 480, 96, 512),
    tile_info(32, 32, 0, 0, 96, 480, 128, 512),
    tile_info(32, 32, 0, 0, 128, 480, 160, 512),
    tile_info(32, 32, 0, 0, 160, 480, 192, 512),
    tile_info(32, 32, 0, 0, 192, 480, 224, 512),
    tile_info(32, 32, 0, 0, 224, 480, 256, 512),
    tile_info(32, 32, 0, 0, 256, 480, 288, 512),
    tile_info(32, 32, 0, 0, 288, 480, 320, 512),
    tile_info(32, 32, 0, 0, 320, 480, 352, 512),
    tile_info(32, 32, 0, 0, 352, 480, 384, 512),
    tile_info(32, 32, 0, 0, 384, 480, 416, 512),
    tile_info(32, 32, 0, 0, 416, 480, 448, 512),
    tile_info(32, 32, 0, 0, 448, 480, 480, 512),
    tile_info(32, 32, 0, 0, 480, 480, 512, 512),
    tile_info(32, 32, 0, 0, 512, 480, 544, 512),
    tile_info(32, 32, 0, 0, 544, 480, 576, 512),
    tile_info(32, 32, 0, 0, 576, 480, 608, 512),
    tile_info(32, 32, 0, 0, 608, 480, 640, 512),
    tile_info(32, 32, 0, 0, 640, 480, 672, 512),
    tile_info(32, 32, 0, 0, 672, 480, 704, 512),
    tile_info(32, 32, 0, 0, 704, 480, 736, 512),
    tile_info(32, 32, 0, 0, 736, 480, 768, 512),
    tile_info(32, 32, 0, 0, 768, 480, 800, 512),
    tile_info(32, 32, 0, 0, 800, 480, 832, 512),
    tile_info(32, 32, 0, 0, 832, 480, 864, 512),
    tile_info(32, 32, 0, 0, 864, 480, 896, 512),
    tile_info(32, 32, 0, 0, 896, 480, 928, 512),
    tile_info(32, 32, 0, 0, 928, 480, 960, 512),
    tile_info(32, 32, 0, 0, 960, 480, 992, 512),
    tile_info(32, 32, 0, 0, 992, 480, 1024, 512),
    tile_info(32, 32, 0, 0, 0, 512, 32, 544),
    tile_info(32, 32, 0, 0, 32, 512, 64, 544),
    tile_info(32, 32, 0, 0, 64, 512, 96, 544),
    tile_info(32, 32, 0, 0, 96, 512, 128, 544),
    tile_info(32, 32, 0, 0, 128, 512, 160, 544),
    tile_info(32, 32, 0, 0, 160, 512, 192, 544),
    tile_info(32, 32, 0, 0, 192, 512, 224, 544),
    tile_info(32, 32, 0, 0, 224, 512, 256, 544),
    tile_info(32, 32, 0, 0, 256, 512, 288, 544),
    tile_info(32, 32, 0, 0, 288, 512, 320, 544),
    tile_info(32, 32, 0, 0, 320, 512, 352, 544),
    tile_info(32, 32, 0, 0, 352, 512, 384, 544),
    tile_info(32, 32, 0, 0, 384, 512, 416, 544),
    tile_info(32, 32, 0, 0, 416, 512, 448, 544),
    tile_info(32, 32, 0, 0, 448, 512, 480, 544),
    tile_info(32, 32, 0, 0, 480, 512, 512, 544),
    tile_info(32, 32, 0, 0, 512, 512, 544, 544),
    tile_info(32, 32, 0, 0, 544, 512, 576, 544),
    tile_info(32, 32, 0, 0, 576, 512, 608, 544),
    tile_info(32, 32, 0, 0, 608, 512, 640, 544),
    tile_info(32, 32, 0, 0, 640, 512, 672, 544),
    tile_info(32, 32, 0, 0, 672, 512, 704, 544),
    tile_info(32, 32, 0, 0, 704, 512, 736, 544),
    tile_info(32, 32, 0, 0, 736, 512, 768, 544),
    tile_info(32, 32, 0, 0, 768, 512, 800, 544),
    tile_info(32, 32, 0, 0, 800, 512, 832, 544),
    tile_info(32, 32, 0, 0, 832, 512, 864, 544),
    tile_info(32, 32, 0, 0, 864, 512, 896, 544),
    tile_info(32, 32, 0, 0, 896, 512, 928, 544),
    tile_info(32, 32, 0, 0, 928, 512, 960, 544),
    tile_info(32, 32, 0, 0, 960, 512, 992, 544),
    tile_info(32, 32, 0, 0, 992, 512, 1024, 544),
    tile_info(32, 32, 0, 0, 0, 544, 32, 576),
    tile_info(32, 32, 0, 0, 32, 544, 64, 576),
    tile_info(32, 32, 0, 0, 64, 544, 96, 576),
    tile_info(32, 32, 0, 0, 96, 544, 128, 576),
    tile_info(32, 32, 0, 0, 128, 544, 160, 576),
    tile_info(32, 32, 0, 0, 160, 544, 192, 576),
    tile_info(32, 32, 0, 0, 192, 544, 224, 576),
    tile_info(32, 32, 0, 0, 224, 544, 256, 576),
    tile_info(32, 32, 0, 0, 256, 544, 288, 576),
    tile_info(32, 32, 0, 0, 288, 544, 320, 576),
    tile_info(32, 32, 0, 0, 320, 544, 352, 576),
    tile_info(32, 32, 0, 0, 352, 544, 384, 576),
    tile_info(32, 32, 0, 0, 384, 544, 416, 576),
    tile_info(32, 32, 0, 0, 416, 544, 448, 576),
    tile_info(32, 32, 0, 0, 448, 544, 480, 576),
    tile_info(32, 32, 0, 0, 480, 544, 512, 576),
    tile_info(32, 32, 0, 0, 512, 544, 544, 576),
    tile_info(32, 32, 0, 0, 544, 544, 576, 576),
    tile_info(32, 32, 0, 0, 576, 544, 608, 576),
    tile_info(32, 32, 0, 0, 608, 544, 640, 576),
    tile_info(32, 32, 0, 0, 640, 544, 672, 576),
    tile_info(32, 32, 0, 0, 672, 544, 704, 576),
    tile_info(32, 32, 0, 0, 704, 544, 736, 576),
    tile_info(32, 32, 0, 0, 736, 544, 768, 576),
    tile_info(32, 32, 0, 0, 768, 544, 800, 576),
    tile_info(32, 32, 0, 0, 800, 544, 832, 576),
    tile_info(32, 32, 0, 0, 832, 544, 864, 576),
    tile_info(32, 32, 0, 0, 864, 544, 896, 576),
    tile_info(32, 32, 0, 0, 896, 544, 928, 576),
    tile_info(32, 32, 0, 0, 928, 544, 960, 576),
    tile_info(32, 32, 0, 0, 960, 544, 992, 576),
    tile_info(32, 32, 0, 0, 992, 544, 1024, 576),
    tile_info(32, 32, 0, 0, 0, 576, 32, 608),
    tile_info(32, 32, 0, 0, 32, 576, 64, 608),
    tile_info(32, 32, 0, 0, 64, 576, 96, 608),
    tile_info(32, 32, 0, 0, 96, 576, 128, 608),
    tile_info(32, 32, 0, 0, 128, 576, 160, 608),
    tile_info(32, 32, 0, 0, 160, 576, 192, 608),
    tile_info(32, 32, 0, 0, 192, 576, 224, 608),
    tile_info(32, 32, 0, 0, 224, 576, 256, 608),
    tile_info(32, 32, 0, 0, 256, 576, 288, 608),
    tile_info(32, 32, 0, 0, 288, 576, 320, 608),
    tile_info(32, 32, 0, 0, 320, 576, 352, 608),
    tile_info(32, 32, 0, 0, 352, 576, 384, 608),
    tile_info(32, 32, 0, 0, 384, 576, 416, 608),
    tile_info(32, 32, 0, 0, 416, 576, 448, 608),
    tile_info(32, 32, 0, 0, 448, 576, 480, 608),
    tile_info(32, 32, 0, 0, 480, 576, 512, 608),
    tile_info(32, 32, 0, 0, 512, 576, 544, 608),
    tile_info(32, 32, 0, 0, 544, 576, 576, 608),
    tile_info(32, 32, 0, 0, 576, 576, 608, 608),
    tile_info(32, 32, 0, 0, 608, 576, 640, 608),
};

tile_info &tile_floor_info(tileidx_t idx)
{
    assert(idx >= 0 && idx < TILE_FLOOR_MAX);
    return _tile_floor_info[idx - 0];
}


typedef pair<const char*, tileidx_t> _name_pair;

static _name_pair floor_name_pairs[] =
{
    _name_pair("dngn_error", 1 + 0),
    _name_pair("dngn_unseen", 0 + 0),
    _name_pair("floor_black_cobalt", 482 + 0),
    _name_pair("floor_cage", 595 + 0),
    _name_pair("floor_cobble_blood", 304 + 0),
    _name_pair("floor_crypt", 468 + 0),
    _name_pair("floor_crystal_squares", 339 + 0),
    _name_pair("floor_demonic", 502 + 0),
    _name_pair("floor_demonic_blue", 511 + 0),
    _name_pair("floor_demonic_brown", 547 + 0),
    _name_pair("floor_demonic_cyan", 529 + 0),
    _name_pair("floor_demonic_darkgray", 565 + 0),
    _name_pair("floor_demonic_green", 520 + 0),
    _name_pair("floor_demonic_lightgray", 556 + 0),
    _name_pair("floor_demonic_magenta", 538 + 0),
    _name_pair("floor_demonic_red", 502 + 0),
    _name_pair("floor_dirt", 394 + 0),
    _name_pair("floor_frozen", 494 + 0),
    _name_pair("floor_grass", 345 + 0),
    _name_pair("floor_grass_dirt_mix", 366 + 0),
    _name_pair("floor_green_bones", 574 + 0),
    _name_pair("floor_grey_dirt", 2 + 0),
    _name_pair("floor_hall", 145 + 0),
    _name_pair("floor_ice", 153 + 0),
    _name_pair("floor_infernal", 448 + 0),
    _name_pair("floor_infernal_blank", 463 + 0),
    _name_pair("floor_iron", 476 + 0),
    _name_pair("floor_labyrinth", 464 + 0),
    _name_pair("floor_lair", 157 + 0),
    _name_pair("floor_limestone", 407 + 0),
    _name_pair("floor_marble", 316 + 0),
    _name_pair("floor_moss", 173 + 0),
    _name_pair("floor_nerves", 369 + 0),
    _name_pair("floor_normal", 2 + 0),
    _name_pair("floor_orc", 149 + 0),
    _name_pair("floor_pebble", 10 + 0),
    _name_pair("floor_pebble_blue", 28 + 0),
    _name_pair("floor_pebble_brown", 19 + 0),
    _name_pair("floor_pebble_cyan", 46 + 0),
    _name_pair("floor_pebble_darkgray", 73 + 0),
    _name_pair("floor_pebble_green", 37 + 0),
    _name_pair("floor_pebble_lightblue", 82 + 0),
    _name_pair("floor_pebble_lightcyan", 100 + 0),
    _name_pair("floor_pebble_lightgray", 10 + 0),
    _name_pair("floor_pebble_lightgreen", 91 + 0),
    _name_pair("floor_pebble_lightmagenta", 118 + 0),
    _name_pair("floor_pebble_lightred", 109 + 0),
    _name_pair("floor_pebble_magenta", 64 + 0),
    _name_pair("floor_pebble_red", 55 + 0),
    _name_pair("floor_pebble_white", 136 + 0),
    _name_pair("floor_pebble_yellow", 127 + 0),
    _name_pair("floor_rough", 236 + 0),
    _name_pair("floor_rough_blue", 240 + 0),
    _name_pair("floor_rough_brown", 256 + 0),
    _name_pair("floor_rough_cyan", 248 + 0),
    _name_pair("floor_rough_darkgray", 264 + 0),
    _name_pair("floor_rough_green", 244 + 0),
    _name_pair("floor_rough_lightblue", 268 + 0),
    _name_pair("floor_rough_lightcyan", 276 + 0),
    _name_pair("floor_rough_lightgray", 260 + 0),
    _name_pair("floor_rough_lightgreen", 272 + 0),
    _name_pair("floor_rough_lightmagenta", 284 + 0),
    _name_pair("floor_rough_lightred", 280 + 0),
    _name_pair("floor_rough_magenta", 252 + 0),
    _name_pair("floor_rough_red", 236 + 0),
    _name_pair("floor_rough_white", 292 + 0),
    _name_pair("floor_rough_yellow", 288 + 0),
    _name_pair("floor_sand", 296 + 0),
    _name_pair("floor_sandstone", 322 + 0),
    _name_pair("floor_slime", 177 + 0),
    _name_pair("floor_slime_acidic", 181 + 0),
    _name_pair("floor_snake_a", 193 + 0),
    _name_pair("floor_snake_c", 197 + 0),
    _name_pair("floor_snake_d", 201 + 0),
    _name_pair("floor_spider", 209 + 0),
    _name_pair("floor_swamp", 205 + 0),
    _name_pair("floor_tomb", 221 + 0),
    _name_pair("floor_vault", 225 + 0),
    _name_pair("floor_vines", 229 + 0),
    _name_pair("floor_volcanic", 332 + 0),
    _name_pair("floor_woodground", 586 + 0),
    _name_pair("halo_dirt", 397 + 0),
    _name_pair("halo_grass", 357 + 0),
    _name_pair("halo_grass2", 376 + 0),
    _name_pair("halo_vault", 385 + 0),
    _name_pair("sigil_algiz_left", 434 + 0),
    _name_pair("sigil_algiz_right", 435 + 0),
    _name_pair("sigil_circle", 426 + 0),
    _name_pair("sigil_cross", 425 + 0),
    _name_pair("sigil_curve_n_e", 417 + 0),
    _name_pair("sigil_curve_n_w", 418 + 0),
    _name_pair("sigil_curve_s_e", 419 + 0),
    _name_pair("sigil_curve_s_w", 420 + 0),
    _name_pair("sigil_fourway", 444 + 0),
    _name_pair("sigil_rhombus", 427 + 0),
    _name_pair("sigil_sharp_e_ne", 445 + 0),
    _name_pair("sigil_sharp_w_sw", 446 + 0),
    _name_pair("sigil_straight_e_ne_sw", 447 + 0),
    _name_pair("sigil_straight_e_nw", 436 + 0),
    _name_pair("sigil_straight_e_sw", 437 + 0),
    _name_pair("sigil_straight_e_w", 421 + 0),
    _name_pair("sigil_straight_n_s", 422 + 0),
    _name_pair("sigil_straight_n_se", 440 + 0),
    _name_pair("sigil_straight_n_sw", 441 + 0),
    _name_pair("sigil_straight_ne_sw", 423 + 0),
    _name_pair("sigil_straight_nw_se", 424 + 0),
    _name_pair("sigil_straight_s_ne", 442 + 0),
    _name_pair("sigil_straight_s_nw", 443 + 0),
    _name_pair("sigil_straight_w_ne", 438 + 0),
    _name_pair("sigil_straight_w_se", 439 + 0),
    _name_pair("sigil_y", 428 + 0),
    _name_pair("sigil_y_inverted", 429 + 0),
    _name_pair("sigil_y_left", 431 + 0),
    _name_pair("sigil_y_leftleaning", 432 + 0),
    _name_pair("sigil_y_right", 430 + 0),
    _name_pair("sigil_y_rightleaning", 433 + 0),
    _name_pair("slime_overlay", 185 + 0),
    _name_pair("tutorial_pad", 406 + 0),
};

bool tile_floor_index(const char *str, tileidx_t *idx)
{
    assert(str);
    if (!str)
        return false;

    string lc = str;
    for (unsigned int i = 0; i < lc.size(); i++)
        lc[i] = tolower(lc[i]);

    int num_pairs = sizeof(floor_name_pairs) / sizeof(floor_name_pairs[0]);
    bool result = binary_search<const char *, tileidx_t>(
       lc.c_str(), &floor_name_pairs[0], num_pairs, &strcmp, idx);
    return (result);
}

bool tile_floor_equal(tileidx_t tile, tileidx_t idx)
{
    assert(tile >= 0 && tile < TILE_FLOOR_MAX);
    return (idx >= tile && idx < tile + tile_floor_count(tile));
}


typedef pair<tile_variation, tileidx_t> _colour_pair;

static _colour_pair floor_colour_pairs[] =
{
    _colour_pair(tile_variation(0, 0), 0),
    _colour_pair(tile_variation(10 + 0, 1), 28 + 0),
    _colour_pair(tile_variation(10 + 0, 2), 37 + 0),
    _colour_pair(tile_variation(10 + 0, 3), 46 + 0),
    _colour_pair(tile_variation(10 + 0, 4), 55 + 0),
    _colour_pair(tile_variation(10 + 0, 5), 64 + 0),
    _colour_pair(tile_variation(10 + 0, 6), 19 + 0),
    _colour_pair(tile_variation(10 + 0, 8), 73 + 0),
    _colour_pair(tile_variation(10 + 0, 9), 82 + 0),
    _colour_pair(tile_variation(10 + 0, 10), 91 + 0),
    _colour_pair(tile_variation(10 + 0, 11), 100 + 0),
    _colour_pair(tile_variation(10 + 0, 12), 109 + 0),
    _colour_pair(tile_variation(10 + 0, 13), 118 + 0),
    _colour_pair(tile_variation(10 + 0, 14), 127 + 0),
    _colour_pair(tile_variation(10 + 0, 15), 136 + 0),
    _colour_pair(tile_variation(236 + 0, 1), 240 + 0),
    _colour_pair(tile_variation(236 + 0, 2), 244 + 0),
    _colour_pair(tile_variation(236 + 0, 3), 248 + 0),
    _colour_pair(tile_variation(236 + 0, 5), 252 + 0),
    _colour_pair(tile_variation(236 + 0, 6), 256 + 0),
    _colour_pair(tile_variation(236 + 0, 7), 260 + 0),
    _colour_pair(tile_variation(236 + 0, 8), 264 + 0),
    _colour_pair(tile_variation(236 + 0, 9), 268 + 0),
    _colour_pair(tile_variation(236 + 0, 10), 272 + 0),
    _colour_pair(tile_variation(236 + 0, 11), 276 + 0),
    _colour_pair(tile_variation(236 + 0, 12), 280 + 0),
    _colour_pair(tile_variation(236 + 0, 13), 284 + 0),
    _colour_pair(tile_variation(236 + 0, 14), 288 + 0),
    _colour_pair(tile_variation(236 + 0, 15), 292 + 0),
    _colour_pair(tile_variation(502 + 0, 1), 511 + 0),
    _colour_pair(tile_variation(502 + 0, 2), 520 + 0),
    _colour_pair(tile_variation(502 + 0, 3), 529 + 0),
    _colour_pair(tile_variation(502 + 0, 5), 538 + 0),
    _colour_pair(tile_variation(502 + 0, 6), 547 + 0),
    _colour_pair(tile_variation(502 + 0, 7), 556 + 0),
    _colour_pair(tile_variation(502 + 0, 8), 565 + 0),
};

tileidx_t tile_floor_coloured(tileidx_t idx, int col)
{
    int num_pairs = sizeof(floor_colour_pairs) / sizeof(floor_colour_pairs[0]);
    tile_variation key(idx, col);
    tileidx_t found;
    bool result = binary_search<tile_variation, tileidx_t>(
       key, &floor_colour_pairs[0], num_pairs,
       &tile_variation::cmp, &found);
    return (result ? found : idx);
}

